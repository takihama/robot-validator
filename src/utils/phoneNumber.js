import phoneAreaCodeDetails from "./phoneAreaCodeDetails.json"

const PHONE_REGEX =
    /^\+?(54)?9?(?:(3894|3892|3891|3888|3887|3886|3885|3878|3877|3876|3873|3869|3868|3867|3865|3863|3862|3861|3858|3857|3856|3855|3854|3846|3845|3844|3843|3841|3838|3837|3835|3832|3827|3826|3825|3821|3786|3782|3781|3777|3775|3774|3773|3772|3758|3757|3756|3755|3754|3751|3743|3741|3735|3734|3731|3725|3721|3718|3716|3715|3711|3585|3584|3583|3582|3576|3575|3574|3573|3572|3571|3564|3563|3562|3549|3548|3547|3546|3544|3543|3542|3541|3537|3533|3532|3525|3524|3522|3521|3498|3497|3496|3493|3492|3491|3489|3487|3483|3482|3476|3472|3471|3469|3468|3467|3466|3465|3464|3463|3462|3460|3458|3456|3455|3454|3447|3446|3445|3444|3442|3438|3437|3436|3435|3409|3408|3407|3406|3405|3404|3402|3401|3400|3388|3387|3385|3382|3329|3327|2983|2982|2972|2966|2964|2963|2962|2954|2953|2952|2948|2946|2945|2942|2940|2936|2935|2934|2933|2932|2931|2929|2928|2927|2926|2925|2924|2923|2922|2921|2920|2903|2902|2901|2658|2657|2656|2655|2652|2651|2648|2647|2646|2626|2625|2624|2622|2478|2477|2475|2474|2473|2396|2395|2394|2393|2392|2358|2357|2356|2355|2354|2353|2352|2346|2345|2344|2343|2342|2338|2337|2336|2335|2334|2333|2331|2326|2325|2324|2323|2320|2317|2316|2314|2302|2297|2296|2292|2291|2286|2285|2284|2283|2281|2274|2273|2272|2271|2268|2267|2266|2265|2264|2262|2261|2257|2255|2254|2252|2246|2245|2244|2243|2242|2241|2229|2227|2226|2225|2224|2223|2221|2202)(?:15)?([\d]{6})|(?:(388|387|385|383|381|380|379|376|370|364|362|358|353|351|348|345|343|342|341|336|299|298|297|294|291|280|266|264|263|261|260|249|237|236|230|223|221|220)(?:15)?([\d]{7}))|(?:(?:0)?(11)(?:15)?([\d]{8})))$/;
   
export const isPhoneNumberValid = (phone) => {
    return PHONE_REGEX.test(phone.replace(/-|\s/g,''));
};

export const splitPhoneNumber = (phone) => {
    const match = PHONE_REGEX.exec(phone.replace(/-|\s/g,''));
    if (!match) return null;

    return {
        countryCode: match[1] || "54",
        areaCode: match[2] || match[4] || match[6] || "",
        number: match[3] || match[5] || match[7] || "",
    };
};

export const getAreaCodeDetails = (areaCode) => {
    return phoneAreaCodeDetails
        .filter(p => p.areaCode === areaCode)
        .reduce((acc, curr) => {
            if (!acc.provinces.includes(curr.province)) {
                acc.provinces.push(curr.province);
              }
            acc.cities.push(curr.city) ;
            return acc;
        }, {provinces: [], cities: []});
}